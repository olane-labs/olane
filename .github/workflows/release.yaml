name: oLane Version Release (Optimized)

on:
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Build and test on pull requests
  build-and-test:
    runs-on: ubuntu-latest
    if: github.event_name != 'release'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Install workspace dependencies
        run: npm install

      - name: Install script dependencies
        working-directory: scripts/release
        run: npm install

      - name: Run build and test
        run: npm run release:dry-run -- --skip-tests=false

  # Release packages using the optimized script
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    environment: release

    permissions:
      contents: write
      id-token: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.CLASSIC_GITHUB_TOKEN }}

      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Config Git author
        run: |
          git config --global user.email "bot@olane.com"
          git config --global user.name "Automated Release"

      - name: Install workspace dependencies
        run: npm install

      - name: Install script dependencies
        working-directory: scripts/release
        run: npm install

      - name: Run optimized release
        run: npm run release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.CLASSIC_GITHUB_TOKEN }}

      - name: Create PR for version changes
        run: |
          # The release script already created the branch and tag
          # Now create a PR to merge changes back to main
          CURRENT_BRANCH=$(git branch --show-current)
          if [[ $CURRENT_BRANCH != "main" ]]; then
            gh pr create \
              --title "Automated Version Update - $(date +%Y-%m-%d)" \
              --body "This PR contains automated version updates from the release workflow." \
              --base main \
              --head $CURRENT_BRANCH \
              --draft
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.CLASSIC_GITHUB_TOKEN }}
