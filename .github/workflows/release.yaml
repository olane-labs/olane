name: oLane Version Release

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   if: github.event_name != 'release'

  #   strategy:
  #     matrix:
  #       package:
  #         - name: root
  #           path: .
  #           lint: true
  #         - name: o-config
  #           path: packages/o-config
  #           lint: true
  #         - name: o-protocol
  #           path: packages/o-protocol
  #           lint: false
  #         - name: o-tool
  #           path: packages/o-tool
  #           lint: true
  #         - name: o-tools-common
  #           path: packages/o-tools-common
  #           lint: true
  #         - name: o-tool-registry
  #           path: packages/o-tool-registry
  #           lint: true
  #         - name: o-network
  #           path: packages/o-network
  #           lint: true

  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: npm

  #     - name: Install root dependencies
  #       run: npm ci

  #     - name: Build and test ${{ matrix.package.name }}
  #       working-directory: ${{ matrix.package.path }}
  #       run: |
  #         npm ci
  #         npm run build
  #         if [ "${{ matrix.package.lint }}" = "true" ]; then
  #           npm run lint
  #         fi
  #         # npm test

  build-and-publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    environment: release

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      # Build and test all packages sequentially
      - name: Install root dependencies
        run: npm ci

      - name: Build and test o-config
        working-directory: packages/o-config
        run: |
          npm ci
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-protocol
        working-directory: packages/o-protocol
        run: |
          npm ci
          npm run build
          # npm run lint
          # npm test
      
      - name: Build and test root package
        run: |
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-tool
        working-directory: packages/o-tool
        run: |
          npm ci
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-tools-common
        working-directory: packages/o-tools-common
        run: |
          npm ci
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-tool-registry
        working-directory: packages/o-tool-registry
        run: |
          npm ci
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-network
        working-directory: packages/o-network
        run: |
          npm ci
          npm run build
          # npm run lint
          # npm test
      
      - name: Build and test o-host
        working-directory: packages/o-host
        run: |
          npm ci
          npm run build
          # npm run lint
          # npm test

      - name: Config Git author
        run: |
          git config --global user.email "bot@olane.com"
          git config --global user.name "Automated Release"

      # Publish packages in dependency order
      - name: Publish o-config
        working-directory: packages/o-config
        run: |
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish o-protocol
        working-directory: packages/o-protocol
        run: |
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish root package (o-core)
        run: |
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Wait for registry propagation
        run: sleep 30

      - name: Update o-tool dependencies and rebuild
        working-directory: packages/o-tool
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest --save-peer
          npm run build

      - name: Publish o-tool
        working-directory: packages/o-tool
        run: |
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Wait for registry propagation
        run: sleep 15

      - name: Update o-tools-common dependencies and rebuild
        working-directory: packages/o-tools-common
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest --save-peer
          npm run build

      - name: Publish o-tools-common
        working-directory: packages/o-tools-common
        run: |
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Wait for registry propagation
        run: sleep 15

      - name: Update o-tool-registry dependencies and rebuild
        working-directory: packages/o-tool-registry
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest @olane/o-tools-common@latest --save-peer
          npm run build

      - name: Publish o-tool-registry
        working-directory: packages/o-tool-registry
        run: |
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Wait for registry propagation
        run: sleep 15

      - name: Update o-network dependencies and rebuild
        working-directory: packages/o-network
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest @olane/o-tools-common@latest @olane/o-tool-registry@latest --save-peer
          npm run build

      - name: Publish o-network
        working-directory: packages/o-network
        run: |
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update o-host dependencies and rebuild
        working-directory: packages/o-host
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-tool@latest --save-peer
          npm run build

      - name: Publish o-host
        working-directory: packages/o-host
        run: |
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push tags
        run: |
          git push && git push --tags