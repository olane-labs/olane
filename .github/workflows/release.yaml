name: oLane Version Release

on:
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'release'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Build and test o-config
        working-directory: packages/o-config
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-protocol
        working-directory: packages/o-protocol
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test
      
      - name: Build and test root package
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-tool
        working-directory: packages/o-tool
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-agent
        working-directory: packages/o-agent
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-leader
        working-directory: packages/o-leader
        run: |
          npm i
          npm run build
          # npm run lint
          npm test
      
      - name: Build and test o-intelligence
        working-directory: packages/o-intelligence
        run: |
          npm i
          npm run build
          # npm run lint
          npm test
      
      - name: Build and test o-storage
        working-directory: packages/o-storage
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-mcp
        working-directory: packages/o-mcp
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-tools-common
        working-directory: packages/o-tools-common
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-tool-registry
        working-directory: packages/o-tool-registry
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-gateway-interface
        working-directory: packages/o-gateway-interface
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-network
        working-directory: packages/o-network
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test

  # Build all packages and store artifacts
  build-packages:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    environment: release

    permissions:
      contents: read
      id-token: write

    outputs:
      version-suffix: ${{ steps.version-info.outputs.suffix }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Generate version suffix
        id: version-info
        run: echo "suffix=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      # Build and test all packages sequentially
      - name: Install root dependencies
        run: npm i

      - name: Build and test o-config
        working-directory: packages/o-config
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-protocol
        working-directory: packages/o-protocol
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test
      
      - name: Build and test root package
        run: |
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-tool
        working-directory: packages/o-tool
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-agent
        working-directory: packages/o-agent
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-leader
        working-directory: packages/o-leader
        run: |
          npm i
          npm run build
          # npm run lint
          npm test
      
      - name: Build and test o-intelligence
        working-directory: packages/o-intelligence
        run: |
          npm i
          npm run build
          # npm run lint
          npm test
      
      - name: Build and test o-storage
        working-directory: packages/o-storage
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-mcp
        working-directory: packages/o-mcp
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-tools-common
        working-directory: packages/o-tools-common
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-tool-registry
        working-directory: packages/o-tool-registry
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test

      - name: Build and test o-gateway-interface
        working-directory: packages/o-gateway-interface
        run: |
          npm i
          npm run build
          # npm run lint
          npm test

      - name: Build and test o-network
        working-directory: packages/o-network
        run: |
          npm i
          npm run build
          # npm run lint
          # npm test

      # Store the entire workspace as an artifact for publish jobs
      - name: Upload workspace artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-workspace
          path: |
            .
            !node_modules
            !**/node_modules
          retention-days: 1

  # Core packages (no dependencies)
  publish-o-config:
    needs: build-packages
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Publish o-config
        working-directory: packages/o-config
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-o-protocol:
    needs: build-packages
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Publish o-protocol
        working-directory: packages/o-protocol
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-o-core:
    needs: build-packages
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Publish root package (o-core)
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Tier 1 packages (depend on core packages)
  publish-o-tool:
    needs: [publish-o-config, publish-o-protocol, publish-o-core]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-tool dependencies and rebuild
        working-directory: packages/o-tool
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest --save-peer
          npm run build

      - name: Publish o-tool
        working-directory: packages/o-tool
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-o-gateway-interface:
    needs: [publish-o-config, publish-o-protocol, publish-o-core, publish-o-tool]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-gateway-interface dependencies and rebuild
        working-directory: packages/o-gateway-interface
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest --save-peer
          npm run build

      - name: Publish o-gateway-interface
        working-directory: packages/o-gateway-interface
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Tier 2 packages (depend on tier 1)
  publish-o-agent:
    needs: [publish-o-tool]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-agent dependencies and rebuild
        working-directory: packages/o-agent
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest --save-peer
          npm run build

      - name: Publish o-agent
        working-directory: packages/o-agent
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-o-intelligence:
    needs: [publish-o-tool]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-intelligence dependencies and rebuild
        working-directory: packages/o-intelligence
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest --save-peer
          npm run build

      - name: Publish o-intelligence
        working-directory: packages/o-intelligence
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-o-storage:
    needs: [publish-o-tool]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-storage dependencies and rebuild
        working-directory: packages/o-storage
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest --save-peer
          npm run build

      - name: Publish o-storage
        working-directory: packages/o-storage
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-o-tools-common:
    needs: [publish-o-tool]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-tools-common dependencies and rebuild
        working-directory: packages/o-tools-common
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest --save-peer
          npm run build

      - name: Publish o-tools-common
        working-directory: packages/o-tools-common
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Tier 3 packages (depend on tier 2)
  publish-o-leader:
    needs: [publish-o-tool-registry]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-leader dependencies and rebuild
        working-directory: packages/o-leader
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest @olane/o-tool-registry@latest --save-peer
          npm run build

      - name: Publish o-leader
        working-directory: packages/o-leader
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-o-mcp:
    needs: [publish-o-leader]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-mcp dependencies and rebuild
        working-directory: packages/o-mcp
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest @olane/o-leader@latest --save-peer
          npm run build

      - name: Publish o-mcp
        working-directory: packages/o-mcp
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-o-tool-registry:
    needs: [publish-o-tools-common]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-tool-registry dependencies and rebuild
        working-directory: packages/o-tool-registry
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest @olane/o-tools-common@latest --save-peer
          npm run build

      - name: Publish o-tool-registry
        working-directory: packages/o-tool-registry
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Final tier
  publish-o-network:
    needs: [publish-o-intelligence, publish-o-leader, publish-o-tool-registry]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Wait for registry propagation
        run: sleep 10

      - name: Update o-network dependencies and rebuild
        working-directory: packages/o-network
        run: |
          # Update to use published versions instead of file dependencies
          npm install @olane/o-core@latest @olane/o-config@latest @olane/o-protocol@latest @olane/o-tool@latest @olane/o-tools-common@latest @olane/o-tool-registry@latest @olane/o-intelligence@latest @olane/o-leader@latest --save-peer
          npm run build

      - name: Publish o-network
        working-directory: packages/o-network
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Final job to handle version changes and PR creation
  finalize-release:
    needs: [publish-o-network]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: built-workspace

      - name: Config Git author
        run: |
          git config --global user.email "bot@olane.com"
          git config --global user.name "Automated Release"

      - name: Push version changes and create PR
        run: |
          BRANCH_NAME="version-change-${{ needs.build-packages.outputs.version-suffix }}"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "version changes"
          git push origin $BRANCH_NAME
          
          # Create draft PR
          gh pr create \
            --title "Automated Version Update - $(date +%Y-%m-%d)" \
            --body "This PR contains automated version updates from the release workflow." \
            --base main \
            --head $BRANCH_NAME \
            --draft
        env:
          GITHUB_TOKEN: ${{ secrets.CLASSIC_GITHUB_TOKEN }}